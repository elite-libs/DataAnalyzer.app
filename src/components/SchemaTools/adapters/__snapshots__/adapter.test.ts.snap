// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`knex writer can emit correct knex migration 1`] = `
"// More info: http://knexjs.org/#Schema-createTable

    exports.up = function up(knex) {
      return knex.schema.createTable(\\"test\\", (table) => {
        table.uuid(\\"id\\").primary();
        table.string(\\"email\\", 40).notNull();
        table.string(\\"first_name\\", 20).notNull();
        table.string(\\"last_name\\", 20).notNull();
        table.boolean(\\"is_active\\").notNull();
        table.datetime(\\"created_at\\").notNull();
        table.datetime(\\"modified_at\\").notNull();
        table.string(\\"catch_phrase\\", 60).notNull();
        table.string(\\"company_name\\", 20).notNull();
        table.integer(\\"credits\\").enum('1', '15', '20', '10', '11', '7', '9').notNull();
        table.decimal(\\"sales_score\\", 10, 8).enum('1.75129', '15.75129', '11.453456', '10.75129', '11.75129', '20.75129', '20.65545', '20.9877865', '7.75129', '9.75129').notNull();
        table.string(\\"location\\", 20).enum('nyc', 'remote', 'denver').notNull();
        table.string(\\"profile\\", 400).unique();
      });
    };

    exports.down = function down(knex) {
      return knex.schema.dropTableIfExists(\\"test\\");
    };

    "
`;

exports[`knex writer can emit knex migration for nested user json 1`] = `
"// More info: http://knexjs.org/#Schema-createTable

    exports.up = function up(knex) {
      return knex.schema.createTable(\\"test\\", (table) => {
        table.increments(\\"id\\");
        table.string(\\"name\\", 20).notNull();
        table.text(\\"notes\\"); // TODO: add references: users.notes;
      });
    };

    exports.down = function down(knex) {
      return knex.schema.dropTableIfExists(\\"test\\");
    };

    "
`;

exports[`knex writer can emit knex migration for people json 1`] = `
"// More info: http://knexjs.org/#Schema-createTable

    exports.up = function up(knex) {
      return knex.schema.createTable(\\"test\\", (table) => {
        table.string(\\"name\\", 40).notNull().unique();
        table.integer(\\"height\\");
        table.integer(\\"mass\\");
        table.string(\\"hair_color\\", 20).notNull();
        table.string(\\"skin_color\\", 20);
        table.string(\\"eye_color\\", 20).enum('blue', 'yellow', 'red', 'brown', 'blue-gray', 'black', 'orange', 'hazel').notNull();
        table.string(\\"birth_year\\", 20);
        table.string(\\"gender\\", 20).enum('male', 'n/a', 'female', 'hermaphrodite', 'none').notNull();
        table.string(\\"homeworld\\", 40).notNull();
        table.json(\\"films\\").notNull();
        table.json(\\"species\\").notNull();
        table.json(\\"vehicles\\").notNull();
        table.json(\\"starships\\").notNull();
        table.datetime(\\"created\\").notNull();
        table.datetime(\\"edited\\").notNull();
        table.string(\\"url\\", 40).notNull().unique();
        table.increments(\\"id\\");
      });
    };

    exports.down = function down(knex) {
      return knex.schema.dropTableIfExists(\\"test\\");
    };

    "
`;
