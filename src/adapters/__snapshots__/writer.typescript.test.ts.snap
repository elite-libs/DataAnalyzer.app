// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`#typescript can emit interface for nested types 1`] = `
"export interface Users {
  id: number;
  name: string;
  notes: UsersNotes[];
};
export interface UsersNotes {
  id: number;
  text: string;
};
"
`;

exports[`#typescript can emit interface for people json 1`] = `
"export interface People {
  name: string;
  height?: number  | null;
  mass?: number  | null;
  hair_color: string;
  skin_color?: string  | null;
  eye_color: \\"blue\\" | \\"yellow\\" | \\"red\\" | \\"brown\\" | \\"blue-gray\\" | \\"black\\" | \\"orange\\" | \\"hazel\\";
  birth_year?: string  | null;
  homeworld: string;
  films: any[];
  species: any[];
  vehicles: any[];
  starships: any[];
  created: Date;
  edited: Date;
  url: string;
  id: number;
};
"
`;

exports[`#typescript can emit interface(s) 1`] = `
"export interface Users {
  id: string;
  email: string;
  firstName: string;
  lastName: string;
  isActive: boolean;
  createdAt: Date;
  modifiedAt: Date;
  catchPhrase: string;
  companyName: string;
  credits: \\"1\\" | \\"15\\" | \\"20\\" | \\"10\\" | \\"0\\" | \\"11\\" | \\"7\\" | \\"9\\";
  salesScore: number;
  location: \\"nyc\\" | \\"remote\\" | \\"denver\\";
  profile?: string  | null;
};
"
`;

exports[`#typescript can emit migration for eventResults json 1`] = `
"export interface EventResults {
  _links: EventResultsLinks;
  _embedded: EventResultsEmbedded;
  page: EventResultsPage;
};
export interface EventResultsLinks {
  self: EventResultsLinksSelf;
  next: EventResultsLinksNext;
};
export interface EventResultsEmbedded {
  events: EventResultsEmbeddedEvents[];
};
export interface EventResultsPage {
  size: number;
  totalElements: number;
  totalPages: number;
  number: number;
};
export interface EventResultsLinksSelf {
  href: string;
  templated: boolean;
};
export interface EventResultsLinksNext {
  href: string;
  templated: boolean;
};
export interface EventResultsEmbeddedEvents {
  name: string;
  type: string;
  id: string;
  test: boolean;
  url: string;
  locale: string;
  images: EventResultsEmbeddedEventsImages[];
  sales: EventResultsEmbeddedEventsSales;
  dates: EventResultsEmbeddedEventsDates;
  classifications: EventResultsEmbeddedEventsClassifications[];
  promoter: EventResultsEmbeddedEventsPromoter;
  _links: EventResultsEmbeddedEventsLinks;
  _embedded: EventResultsEmbeddedEventsEmbedded;
};
export interface EventResultsEmbeddedEventsImages {
  ratio: string;
  url: string;
  width: number;
  height: number;
  fallback: boolean;
};
export interface EventResultsEmbeddedEventsSales {
  public: EventResultsEmbeddedEventsSalesPublic;
};
export interface EventResultsEmbeddedEventsDates {
  start: EventResultsEmbeddedEventsDatesStart;
  timezone: string;
  status: EventResultsEmbeddedEventsDatesStatus;
};
export interface EventResultsEmbeddedEventsClassifications {
  primary: boolean;
  segment: EventResultsEmbeddedEventsClassificationsSegment;
  genre: EventResultsEmbeddedEventsClassificationsGenre;
  subGenre: EventResultsEmbeddedEventsClassificationsSubGenre;
};
export interface EventResultsEmbeddedEventsPromoter {
  id: number;
};
export interface EventResultsEmbeddedEventsLinks {
  self: EventResultsEmbeddedEventsLinksSelf;
  attractions: EventResultsEmbeddedEventsLinksAttractions[];
  venues: EventResultsEmbeddedEventsLinksVenues[];
};
export interface EventResultsEmbeddedEventsEmbedded {
  venues: EventResultsEmbeddedEventsEmbeddedVenues[];
  attractions: EventResultsEmbeddedEventsEmbeddedAttractions[];
};
export interface EventResultsEmbeddedEventsSalesPublic {
  startDateTime: Date;
  startTBD: boolean;
  endDateTime: Date;
};
export interface EventResultsEmbeddedEventsDatesStart {
  localDate: Date;
  dateTBD: boolean;
  dateTBA: boolean;
  timeTBA: boolean;
  noSpecificTime: boolean;
};
export interface EventResultsEmbeddedEventsDatesStatus {
  code: string;
};
export interface EventResultsEmbeddedEventsClassificationsSegment {
  id: string;
  name: string;
};
export interface EventResultsEmbeddedEventsClassificationsGenre {
  id: string;
  name: string;
};
export interface EventResultsEmbeddedEventsClassificationsSubGenre {
  id: string;
  name: string;
};
export interface EventResultsEmbeddedEventsLinksSelf {
  href: string;
};
export interface EventResultsEmbeddedEventsLinksAttractions {
  href: string;
};
export interface EventResultsEmbeddedEventsLinksVenues {
  href: string;
};
export interface EventResultsEmbeddedEventsEmbeddedVenues {
  name: string;
  type: string;
  id: string;
  test: boolean;
  locale: string;
  postalCode: number;
  timezone: string;
  city: EventResultsEmbeddedEventsEmbeddedVenuesCity;
  state: EventResultsEmbeddedEventsEmbeddedVenuesState;
  country: EventResultsEmbeddedEventsEmbeddedVenuesCountry;
  address: EventResultsEmbeddedEventsEmbeddedVenuesAddress;
  location: EventResultsEmbeddedEventsEmbeddedVenuesLocation;
  markets: EventResultsEmbeddedEventsEmbeddedVenuesMarkets[];
  _links: EventResultsEmbeddedEventsEmbeddedVenuesLinks;
};
export interface EventResultsEmbeddedEventsEmbeddedAttractions {
  name: string;
  type: string;
  id: string;
  test: boolean;
  locale: string;
  images: EventResultsEmbeddedEventsEmbeddedAttractionsImages[];
  classifications: EventResultsEmbeddedEventsEmbeddedAttractionsClassifications[];
  _links: EventResultsEmbeddedEventsEmbeddedAttractionsLinks;
};
export interface EventResultsEmbeddedEventsEmbeddedVenuesCity {
  name: string;
};
export interface EventResultsEmbeddedEventsEmbeddedVenuesState {
  name: string;
  stateCode: string;
};
export interface EventResultsEmbeddedEventsEmbeddedVenuesCountry {
  name: string;
  countryCode: string;
};
export interface EventResultsEmbeddedEventsEmbeddedVenuesAddress {
  line1: string;
};
export interface EventResultsEmbeddedEventsEmbeddedVenuesLocation {
  longitude: number;
  latitude: number;
};
export interface EventResultsEmbeddedEventsEmbeddedVenuesMarkets {
  id: number;
};
export interface EventResultsEmbeddedEventsEmbeddedVenuesLinks {
  self: EventResultsEmbeddedEventsEmbeddedVenuesLinksSelf;
};
export interface EventResultsEmbeddedEventsEmbeddedVenuesLinksSelf {
  href: string;
};
export interface EventResultsEmbeddedEventsEmbeddedAttractionsImages {
  ratio: string;
  url: string;
  width: number;
  height: number;
  fallback: boolean;
};
export interface EventResultsEmbeddedEventsEmbeddedAttractionsClassifications {
  primary: boolean;
  segment: EventResultsEmbeddedEventsEmbeddedAttractionsClassificationsSegment;
  genre: EventResultsEmbeddedEventsEmbeddedAttractionsClassificationsGenre;
  subGenre: EventResultsEmbeddedEventsEmbeddedAttractionsClassificationsSubGenre;
};
export interface EventResultsEmbeddedEventsEmbeddedAttractionsLinks {
  self: EventResultsEmbeddedEventsEmbeddedAttractionsLinksSelf;
};
export interface EventResultsEmbeddedEventsEmbeddedAttractionsClassificationsSegment {
  id: string;
  name: string;
};
export interface EventResultsEmbeddedEventsEmbeddedAttractionsClassificationsGenre {
  id: string;
  name: string;
};
export interface EventResultsEmbeddedEventsEmbeddedAttractionsClassificationsSubGenre {
  id: string;
  name: string;
};
export interface EventResultsEmbeddedEventsEmbeddedAttractionsLinksSelf {
  href: string;
};
"
`;

exports[`#typescript can emit migration for eventResults json, w/ dense & trim fields 1`] = `
"export interface EventResults {
  _links: Links;
  _embedded: Embedded;
  page: Page;
};
export interface Links {
  self: Self;
};
export interface Embedded {
  venues: Venues[];
  attractions: Attractions[];
};
export interface Page {
  size: number;
  totalElements: number;
  totalPages: number;
  number: number;
};
export interface Self {
  href: string;
};
export interface Next {
  href: string;
  templated: boolean;
};
export interface Events {
  name: string;
  type: string;
  id: string;
  test: boolean;
  url: string;
  locale: string;
  images: Images[];
  sales: Sales;
  dates: Dates;
  classifications: Classifications[];
  promoter: Promoter;
  _links: Links;
  _embedded: Embedded;
};
export interface Images {
  ratio: string;
  url: string;
  width: number;
  height: number;
  fallback: boolean;
};
export interface Sales {
  public: Public;
};
export interface Dates {
  start: Start;
  timezone: string;
  status: Status;
};
export interface Classifications {
  primary: boolean;
  segment: IdName;
  genre: IdName;
  subGenre: IdName;
};
export interface Promoter {
  id: number;
};
export interface Public {
  startDateTime: Date;
  startTBD: boolean;
  endDateTime: Date;
};
export interface Start {
  localDate: Date;
  dateTBD: boolean;
  dateTBA: boolean;
  timeTBA: boolean;
  noSpecificTime: boolean;
};
export interface Status {
  code: string;
};
export interface Attractions {
  name: string;
  type: string;
  id: string;
  test: boolean;
  locale: string;
  images: Images[];
  classifications: Classifications[];
  _links: Links;
};
export interface Venues {
  name: string;
  type: string;
  id: string;
  test: boolean;
  locale: string;
  postalCode: number;
  timezone: string;
  city: City;
  state: State;
  country: Country;
  address: Address;
  location: Location;
  markets: Markets[];
  _links: Links;
};
export interface City {
  name: string;
};
export interface State {
  name: string;
  stateCode: string;
};
export interface Country {
  name: string;
  countryCode: string;
};
export interface Address {
  line1: string;
};
export interface Location {
  longitude: number;
  latitude: number;
};
export interface Markets {
  id: number;
};
export interface IdName {
  id: string;
  name: string;
};
"
`;

exports[`#typescript can emit migration for eventResults json, w/ dense fields 1`] = `
"export interface EventResults {
  _links: EventResultsLinks;
  _embedded: EventResultsEmbedded;
  page: EventResultsPage;
};
export interface EventResultsLinks {
  self: HrefTemplated;
  next: HrefTemplated;
};
export interface EventResultsEmbedded {
  events: EventResultsEmbeddedEvents[];
};
export interface EventResultsPage {
  size: number;
  totalElements: number;
  totalPages: number;
  number: number;
};
export interface EventResultsEmbeddedEvents {
  name: string;
  type: string;
  id: string;
  test: boolean;
  url: string;
  locale: string;
  images: Images[];
  sales: EventResultsEmbeddedEventsSales;
  dates: EventResultsEmbeddedEventsDates;
  classifications: Classifications[];
  promoter: EventResultsEmbeddedEventsPromoter;
  _links: EventResultsEmbeddedEventsLinks;
  _embedded: EventResultsEmbeddedEventsEmbedded;
};
export interface EventResultsEmbeddedEventsSales {
  public: EventResultsEmbeddedEventsSalesPublic;
};
export interface EventResultsEmbeddedEventsDates {
  start: EventResultsEmbeddedEventsDatesStart;
  timezone: string;
  status: EventResultsEmbeddedEventsDatesStatus;
};
export interface EventResultsEmbeddedEventsPromoter {
  id: number;
};
export interface EventResultsEmbeddedEventsLinks {
  self: Href;
  attractions: Href[];
  venues: Href[];
};
export interface EventResultsEmbeddedEventsEmbedded {
  venues: EventResultsEmbeddedEventsEmbeddedVenues[];
  attractions: EventResultsEmbeddedEventsEmbeddedAttractions[];
};
export interface EventResultsEmbeddedEventsSalesPublic {
  startDateTime: Date;
  startTBD: boolean;
  endDateTime: Date;
};
export interface EventResultsEmbeddedEventsDatesStart {
  localDate: Date;
  dateTBD: boolean;
  dateTBA: boolean;
  timeTBA: boolean;
  noSpecificTime: boolean;
};
export interface EventResultsEmbeddedEventsDatesStatus {
  code: string;
};
export interface EventResultsEmbeddedEventsEmbeddedVenues {
  name: string;
  type: string;
  id: string;
  test: boolean;
  locale: string;
  postalCode: number;
  timezone: string;
  city: EventResultsEmbeddedEventsEmbeddedVenuesCity;
  state: EventResultsEmbeddedEventsEmbeddedVenuesState;
  country: EventResultsEmbeddedEventsEmbeddedVenuesCountry;
  address: EventResultsEmbeddedEventsEmbeddedVenuesAddress;
  location: EventResultsEmbeddedEventsEmbeddedVenuesLocation;
  markets: EventResultsEmbeddedEventsEmbeddedVenuesMarkets[];
  _links: Links;
};
export interface EventResultsEmbeddedEventsEmbeddedAttractions {
  name: string;
  type: string;
  id: string;
  test: boolean;
  locale: string;
  images: Images[];
  classifications: Classifications[];
  _links: Links;
};
export interface EventResultsEmbeddedEventsEmbeddedVenuesCity {
  name: string;
};
export interface EventResultsEmbeddedEventsEmbeddedVenuesState {
  name: string;
  stateCode: string;
};
export interface EventResultsEmbeddedEventsEmbeddedVenuesCountry {
  name: string;
  countryCode: string;
};
export interface EventResultsEmbeddedEventsEmbeddedVenuesAddress {
  line1: string;
};
export interface EventResultsEmbeddedEventsEmbeddedVenuesLocation {
  longitude: number;
  latitude: number;
};
export interface EventResultsEmbeddedEventsEmbeddedVenuesMarkets {
  id: number;
};
export interface HrefTemplated {
  href: string;
  templated: boolean;
};
export interface Images {
  ratio: string;
  url: string;
  width: number;
  height: number;
  fallback: boolean;
};
export interface Classifications {
  primary: boolean;
  segment: IdName;
  genre: IdName;
  subGenre: IdName;
};
export interface IdName {
  id: string;
  name: string;
};
export interface Href {
  href: string;
};
export interface Links {
  self: Href;
};
"
`;

exports[`#typescript can emit migration for pokemon json 1`] = `
"export interface Pokemon {
  abilities: PokemonAbilities[];
  base_experience: number;
  forms: PokemonForms[];
  game_indices: PokemonGameIndices[];
  height: number;
  held_items: any[];
  id: number;
  is_default: boolean;
  location_area_encounters: string;
  moves: PokemonMoves[];
  name: string;
  order: number;
  species: PokemonSpecies;
  sprites: PokemonSprites;
  stats: PokemonStats[];
  types: PokemonTypes[];
  weight: number;
};
export interface PokemonAbilities {
  ability: PokemonAbilitiesAbility;
  is_hidden: boolean;
  slot: number;
};
export interface PokemonForms {
  name: string;
  url: string;
};
export interface PokemonGameIndices {
  game_index: number;
  version: PokemonGameIndicesVersion;
};
export interface PokemonMoves {
  move: PokemonMovesMove;
  version_group_details: PokemonMovesVersionGroupDetails[];
};
export interface PokemonSpecies {
  name: string;
  url: string;
};
export interface PokemonSprites {
  back_default: string;
  back_female: string;
  back_shiny: string;
  back_shiny_female: string;
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
  other: PokemonSpritesOther;
  versions: PokemonSpritesVersions;
};
export interface PokemonStats {
  base_stat: number;
  effort: number;
  stat: PokemonStatsStat;
};
export interface PokemonTypes {
  slot: number;
  type: PokemonTypesType;
};
export interface PokemonAbilitiesAbility {
  name: string;
  url: string;
};
export interface PokemonGameIndicesVersion {
  name: string;
  url: string;
};
export interface PokemonMovesMove {
  name: string;
  url: string;
};
export interface PokemonMovesVersionGroupDetails {
  level_learned_at: number;
  move_learn_method: PokemonMovesVersionGroupDetailsMoveLearnMethod;
  version_group: PokemonMovesVersionGroupDetailsVersionGroup;
};
export interface PokemonMovesVersionGroupDetailsMoveLearnMethod {
  name: \\"machine\\" | \\"tutor\\" | \\"level-up\\" | \\"egg\\";
  url: \\"https://pokeapi.co/api/v2/move-learn-method/4/\\" | \\"https://pokeapi.co/api/v2/move-learn-method/3/\\" | \\"https://pokeapi.co/api/v2/move-learn-method/1/\\" | \\"https://pokeapi.co/api/v2/move-learn-method/2/\\";
};
export interface PokemonMovesVersionGroupDetailsVersionGroup {
  name: string;
  url: string;
};
export interface PokemonSpritesOther {
  dream_world: PokemonSpritesOtherDreamWorld;
  official-artwork: PokemonSpritesOtherOfficialArtwork;
};
export interface PokemonSpritesVersions {
  generation-i: PokemonSpritesVersionsGenerationI;
  generation-ii: PokemonSpritesVersionsGenerationIi;
  generation-iii: PokemonSpritesVersionsGenerationIii;
  generation-iv: PokemonSpritesVersionsGenerationIv;
  generation-v: PokemonSpritesVersionsGenerationV;
  generation-vi: PokemonSpritesVersionsGenerationVi;
  generation-vii: PokemonSpritesVersionsGenerationVii;
  generation-viii: PokemonSpritesVersionsGenerationViii;
};
export interface PokemonSpritesOtherDreamWorld {
  front_default: string;
  front_female: string;
};
export interface PokemonSpritesOtherOfficialArtwork {
  front_default: string;
};
export interface PokemonSpritesVersionsGenerationI {
  red-blue: PokemonSpritesVersionsGenerationIRedBlue;
  yellow: PokemonSpritesVersionsGenerationIYellow;
};
export interface PokemonSpritesVersionsGenerationIi {
  crystal: PokemonSpritesVersionsGenerationIiCrystal;
  gold: PokemonSpritesVersionsGenerationIiGold;
  silver: PokemonSpritesVersionsGenerationIiSilver;
};
export interface PokemonSpritesVersionsGenerationIii {
  emerald: PokemonSpritesVersionsGenerationIiiEmerald;
  firered-leafgreen: PokemonSpritesVersionsGenerationIiiFireredLeafgreen;
  ruby-sapphire: PokemonSpritesVersionsGenerationIiiRubySapphire;
};
export interface PokemonSpritesVersionsGenerationIv {
  diamond-pearl: PokemonSpritesVersionsGenerationIvDiamondPearl;
  heartgold-soulsilver: PokemonSpritesVersionsGenerationIvHeartgoldSoulsilver;
  platinum: PokemonSpritesVersionsGenerationIvPlatinum;
};
export interface PokemonSpritesVersionsGenerationV {
  black-white: PokemonSpritesVersionsGenerationVBlackWhite;
};
export interface PokemonSpritesVersionsGenerationVi {
  omegaruby-alphasapphire: PokemonSpritesVersionsGenerationViOmegarubyAlphasapphire;
  x-y: PokemonSpritesVersionsGenerationViXY;
};
export interface PokemonSpritesVersionsGenerationVii {
  icons: PokemonSpritesVersionsGenerationViiIcons;
  ultra-sun-ultra-moon: PokemonSpritesVersionsGenerationViiUltraSunUltraMoon;
};
export interface PokemonSpritesVersionsGenerationViii {
  icons: PokemonSpritesVersionsGenerationViiiIcons;
};
export interface PokemonSpritesVersionsGenerationIRedBlue {
  back_default: string;
  back_gray: string;
  front_default: string;
  front_gray: string;
};
export interface PokemonSpritesVersionsGenerationIYellow {
  back_default: string;
  back_gray: string;
  front_default: string;
  front_gray: string;
};
export interface PokemonSpritesVersionsGenerationIiCrystal {
  back_default: string;
  back_shiny: string;
  front_default: string;
  front_shiny: string;
};
export interface PokemonSpritesVersionsGenerationIiGold {
  back_default: string;
  back_shiny: string;
  front_default: string;
  front_shiny: string;
};
export interface PokemonSpritesVersionsGenerationIiSilver {
  back_default: string;
  back_shiny: string;
  front_default: string;
  front_shiny: string;
};
export interface PokemonSpritesVersionsGenerationIiiEmerald {
  front_default: string;
  front_shiny: string;
};
export interface PokemonSpritesVersionsGenerationIiiFireredLeafgreen {
  back_default: string;
  back_shiny: string;
  front_default: string;
  front_shiny: string;
};
export interface PokemonSpritesVersionsGenerationIiiRubySapphire {
  back_default: string;
  back_shiny: string;
  front_default: string;
  front_shiny: string;
};
export interface PokemonSpritesVersionsGenerationIvDiamondPearl {
  back_default: string;
  back_female: string;
  back_shiny: string;
  back_shiny_female: string;
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
export interface PokemonSpritesVersionsGenerationIvHeartgoldSoulsilver {
  back_default: string;
  back_female: string;
  back_shiny: string;
  back_shiny_female: string;
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
export interface PokemonSpritesVersionsGenerationIvPlatinum {
  back_default: string;
  back_female: string;
  back_shiny: string;
  back_shiny_female: string;
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
export interface PokemonSpritesVersionsGenerationVBlackWhite {
  animated: PokemonSpritesVersionsGenerationVBlackWhiteAnimated;
  back_default: string;
  back_female: string;
  back_shiny: string;
  back_shiny_female: string;
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
export interface PokemonSpritesVersionsGenerationVBlackWhiteAnimated {
  back_default: string;
  back_female: string;
  back_shiny: string;
  back_shiny_female: string;
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
export interface PokemonSpritesVersionsGenerationViOmegarubyAlphasapphire {
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
export interface PokemonSpritesVersionsGenerationViXY {
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
export interface PokemonSpritesVersionsGenerationViiIcons {
  front_default: string;
  front_female: string;
};
export interface PokemonSpritesVersionsGenerationViiUltraSunUltraMoon {
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
export interface PokemonSpritesVersionsGenerationViiiIcons {
  front_default: string;
  front_female: string;
};
export interface PokemonStatsStat {
  name: string;
  url: string;
};
export interface PokemonTypesType {
  name: string;
  url: string;
};
"
`;

exports[`#typescript can emit migration for pokemon json, w/ dense & trim fields 1`] = `
"export interface Pokemon {
  abilities: Abilities[];
  base_experience: number;
  forms: Forms[];
  game_indices: GameIndices[];
  height: number;
  held_items: any[];
  id: number;
  is_default: boolean;
  location_area_encounters: string;
  moves: Moves[];
  name: string;
  order: number;
  species: Species;
  sprites: Sprites;
  stats: Stats[];
  types: Types[];
  weight: number;
};
export interface Abilities {
  ability: NameUrl;
  is_hidden: boolean;
  slot: number;
};
export interface GameIndices {
  game_index: number;
  version: NameUrl;
};
export interface Moves {
  move: NameUrl;
  version_group_details: VersionGroupDetails[];
};
export interface Sprites {
  back_default: string;
  back_female: string;
  back_shiny: string;
  back_shiny_female: string;
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
  other: Other;
  versions: Versions;
};
export interface Stats {
  base_stat: number;
  effort: number;
  stat: NameUrl;
};
export interface Types {
  slot: number;
  type: NameUrl;
};
export interface VersionGroupDetails {
  level_learned_at: number;
  move_learn_method: NameUrl;
  version_group: NameUrl;
};
export interface Other {
  dream_world: FrontDefaultFrontFemale;
  official-artwork: OfficialArtwork;
};
export interface Versions {
  generation-i: GenerationI;
  generation-ii: GenerationIi;
  generation-iii: GenerationIii;
  generation-iv: GenerationIv;
  generation-v: GenerationV;
  generation-vi: GenerationVi;
  generation-vii: GenerationVii;
  generation-viii: GenerationViii;
};
export interface OfficialArtwork {
  front_default: string;
};
export interface GenerationI {
  red-blue: RedBlueYellow;
  yellow: RedBlueYellow;
};
export interface GenerationIi {
  crystal: Crystal;
  gold: Gold;
  silver: Silver;
};
export interface GenerationIii {
  emerald: Emerald;
  firered-leafgreen: FireredLeafgreen;
  ruby-sapphire: RubySapphire;
};
export interface GenerationIv {
  diamond-pearl: AnimatedDiamondPearlHeartgoldSoulsilverPlatinum;
  heartgold-soulsilver: AnimatedDiamondPearlHeartgoldSoulsilverPlatinum;
  platinum: AnimatedDiamondPearlHeartgoldSoulsilverPlatinum;
};
export interface GenerationV {
  black-white: BlackWhite;
};
export interface GenerationVi {
  omegaruby-alphasapphire: OmegarubyAlphasapphireUltraSunUltraMoonXY;
  x-y: OmegarubyAlphasapphireUltraSunUltraMoonXY;
};
export interface GenerationVii {
  icons: FrontDefaultFrontFemale;
  ultra-sun-ultra-moon: OmegarubyAlphasapphireUltraSunUltraMoonXY;
};
export interface GenerationViii {
  icons: FrontDefaultFrontFemale;
};
export interface Crystal {
  back_default: string;
  back_shiny: string;
  front_default: string;
  front_shiny: string;
};
export interface Gold {
  back_default: string;
  back_shiny: string;
  front_default: string;
  front_shiny: string;
};
export interface Silver {
  back_default: string;
  back_shiny: string;
  front_default: string;
  front_shiny: string;
};
export interface Emerald {
  front_default: string;
  front_shiny: string;
};
export interface FireredLeafgreen {
  back_default: string;
  back_shiny: string;
  front_default: string;
  front_shiny: string;
};
export interface RubySapphire {
  back_default: string;
  back_shiny: string;
  front_default: string;
  front_shiny: string;
};
export interface BlackWhite {
  animated: AnimatedDiamondPearlHeartgoldSoulsilverPlatinum;
  back_default: string;
  back_female: string;
  back_shiny: string;
  back_shiny_female: string;
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
export interface NameUrl {
  name: string;
  url: string;
};
export interface FrontDefaultFrontFemale {
  front_default: string;
  front_female: string;
};
export interface RedBlueYellow {
  back_default: string;
  back_gray: string;
  front_default: string;
  front_gray: string;
};
export interface AnimatedDiamondPearlHeartgoldSoulsilverPlatinum {
  back_default: string;
  back_female: string;
  back_shiny: string;
  back_shiny_female: string;
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
export interface OmegarubyAlphasapphireUltraSunUltraMoonXY {
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
"
`;

exports[`#typescript can emit migration for pokemon json, w/ dense fields 1`] = `
"export interface Pokemon {
  abilities: PokemonAbilities[];
  base_experience: number;
  forms: PokemonForms[];
  game_indices: PokemonGameIndices[];
  height: number;
  held_items: any[];
  id: number;
  is_default: boolean;
  location_area_encounters: string;
  moves: PokemonMoves[];
  name: string;
  order: number;
  species: PokemonSpecies;
  sprites: PokemonSprites;
  stats: PokemonStats[];
  types: PokemonTypes[];
  weight: number;
};
export interface PokemonAbilities {
  ability: NameUrl;
  is_hidden: boolean;
  slot: number;
};
export interface PokemonGameIndices {
  game_index: number;
  version: NameUrl;
};
export interface PokemonMoves {
  move: NameUrl;
  version_group_details: PokemonMovesVersionGroupDetails[];
};
export interface PokemonSprites {
  back_default: string;
  back_female: string;
  back_shiny: string;
  back_shiny_female: string;
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
  other: PokemonSpritesOther;
  versions: PokemonSpritesVersions;
};
export interface PokemonStats {
  base_stat: number;
  effort: number;
  stat: NameUrl;
};
export interface PokemonTypes {
  slot: number;
  type: NameUrl;
};
export interface PokemonMovesVersionGroupDetails {
  level_learned_at: number;
  move_learn_method: NameUrl;
  version_group: NameUrl;
};
export interface PokemonSpritesOther {
  dream_world: FrontDefaultFrontFemale;
  official-artwork: PokemonSpritesOtherOfficialArtwork;
};
export interface PokemonSpritesVersions {
  generation-i: PokemonSpritesVersionsGenerationI;
  generation-ii: PokemonSpritesVersionsGenerationIi;
  generation-iii: PokemonSpritesVersionsGenerationIii;
  generation-iv: PokemonSpritesVersionsGenerationIv;
  generation-v: PokemonSpritesVersionsGenerationV;
  generation-vi: PokemonSpritesVersionsGenerationVi;
  generation-vii: PokemonSpritesVersionsGenerationVii;
  generation-viii: PokemonSpritesVersionsGenerationViii;
};
export interface PokemonSpritesOtherOfficialArtwork {
  front_default: string;
};
export interface PokemonSpritesVersionsGenerationI {
  red-blue: RedBlueYellow;
  yellow: RedBlueYellow;
};
export interface PokemonSpritesVersionsGenerationIi {
  crystal: PokemonSpritesVersionsGenerationIiCrystal;
  gold: PokemonSpritesVersionsGenerationIiGold;
  silver: PokemonSpritesVersionsGenerationIiSilver;
};
export interface PokemonSpritesVersionsGenerationIii {
  emerald: PokemonSpritesVersionsGenerationIiiEmerald;
  firered-leafgreen: PokemonSpritesVersionsGenerationIiiFireredLeafgreen;
  ruby-sapphire: PokemonSpritesVersionsGenerationIiiRubySapphire;
};
export interface PokemonSpritesVersionsGenerationIv {
  diamond-pearl: PokemonSpritesVersionsGenerationIvDiamondPearl;
  heartgold-soulsilver: PokemonSpritesVersionsGenerationIvHeartgoldSoulsilver;
  platinum: PokemonSpritesVersionsGenerationIvPlatinum;
};
export interface PokemonSpritesVersionsGenerationV {
  black-white: PokemonSpritesVersionsGenerationVBlackWhite;
};
export interface PokemonSpritesVersionsGenerationVi {
  omegaruby-alphasapphire: GenerationViiOmegarubyAlphasapphireUltraSunUltraMoonXY;
  x-y: GenerationViiOmegarubyAlphasapphireUltraSunUltraMoonXY;
};
export interface PokemonSpritesVersionsGenerationVii {
  icons: FrontDefaultFrontFemale;
  ultra-sun-ultra-moon: GenerationViiOmegarubyAlphasapphireUltraSunUltraMoonXY;
};
export interface PokemonSpritesVersionsGenerationViii {
  icons: FrontDefaultFrontFemale;
};
export interface PokemonSpritesVersionsGenerationIiCrystal {
  back_default: string;
  back_shiny: string;
  front_default: string;
  front_shiny: string;
};
export interface PokemonSpritesVersionsGenerationIiGold {
  back_default: string;
  back_shiny: string;
  front_default: string;
  front_shiny: string;
};
export interface PokemonSpritesVersionsGenerationIiSilver {
  back_default: string;
  back_shiny: string;
  front_default: string;
  front_shiny: string;
};
export interface PokemonSpritesVersionsGenerationIiiEmerald {
  front_default: string;
  front_shiny: string;
};
export interface PokemonSpritesVersionsGenerationIiiFireredLeafgreen {
  back_default: string;
  back_shiny: string;
  front_default: string;
  front_shiny: string;
};
export interface PokemonSpritesVersionsGenerationIiiRubySapphire {
  back_default: string;
  back_shiny: string;
  front_default: string;
  front_shiny: string;
};
export interface PokemonSpritesVersionsGenerationIvDiamondPearl {
  back_default: string;
  back_female: string;
  back_shiny: string;
  back_shiny_female: string;
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
export interface PokemonSpritesVersionsGenerationIvHeartgoldSoulsilver {
  back_default: string;
  back_female: string;
  back_shiny: string;
  back_shiny_female: string;
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
export interface PokemonSpritesVersionsGenerationIvPlatinum {
  back_default: string;
  back_female: string;
  back_shiny: string;
  back_shiny_female: string;
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
export interface PokemonSpritesVersionsGenerationVBlackWhite {
  animated: PokemonSpritesVersionsGenerationVBlackWhiteAnimated;
  back_default: string;
  back_female: string;
  back_shiny: string;
  back_shiny_female: string;
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
export interface PokemonSpritesVersionsGenerationVBlackWhiteAnimated {
  back_default: string;
  back_female: string;
  back_shiny: string;
  back_shiny_female: string;
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
export interface NameUrl {
  name: string;
  url: string;
};
export interface FrontDefaultFrontFemale {
  front_default: string;
  front_female: string;
};
export interface RedBlueYellow {
  back_default: string;
  back_gray: string;
  front_default: string;
  front_gray: string;
};
export interface GenerationViiOmegarubyAlphasapphireUltraSunUltraMoonXY {
  front_default: string;
  front_female: string;
  front_shiny: string;
  front_shiny_female: string;
};
"
`;

exports[`#typescript can handle bigint 1`] = `
"export interface Users {
  id: bigint;
  username: string;
  email: string;
};
"
`;
