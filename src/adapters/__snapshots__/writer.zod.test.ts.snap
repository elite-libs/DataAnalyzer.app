// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`#zod can emit migration for eventResults json 1`] = `
"import { z } from \\"zod\\";


export const EventResultsSchema = z.object({
  links: z.lazy(() => EventResultsLinksSchema),
  embedded: z.lazy(() => EventResultsEmbeddedSchema),
  page: z.lazy(() => EventResultsPageSchema)
});

export const EventResultsLinksSchema = z.object({
  self: z.lazy(() => EventResultsLinksSelfSchema),
  next: z.lazy(() => EventResultsLinksNextSchema)
});


export const EventResultsEmbeddedSchema = z.object({
  events: z.lazy(() => EventResultsEmbeddedEventsSchema)
});


export const EventResultsPageSchema = z.object({
  size: z.number().required().max(1),
  totalElements: z.number().required().max(87958),
  totalPages: z.number().required().max(87958),
  number: z.number().required()
});


export const EventResultsLinksSelfSchema = z.object({
  href: z.string().required(),
  templated: z.boolean().required()
});


export const EventResultsLinksNextSchema = z.object({
  href: z.string().required(),
  templated: z.boolean().required()
});


export const EventResultsEmbeddedEventsSchema = z.object({
  name: z.string().required(),
  type: z.string().required(),
  id: z.string().required(),
  test: z.boolean().required(),
  url: z.string().required(),
  locale: z.string().required(),
  images: z.lazy(() => EventResultsEmbeddedEventsImagesSchema),
  sales: z.lazy(() => EventResultsEmbeddedEventsSalesSchema),
  dates: z.lazy(() => EventResultsEmbeddedEventsDatesSchema),
  classifications: z.lazy(() => EventResultsEmbeddedEventsClassificationsSchema),
  promoter: z.lazy(() => EventResultsEmbeddedEventsPromoterSchema),
  links: z.lazy(() => EventResultsEmbeddedEventsLinksSchema),
  embedded: z.lazy(() => EventResultsEmbeddedEventsEmbeddedSchema)
});


export const EventResultsEmbeddedEventsImagesSchema = z.object({
  ratio: z.string().required(),
  url: z.string().required(),
  width: z.number().required().max(2048),
  height: z.number().required().max(1152),
  fallback: z.boolean().required()
});


export const EventResultsEmbeddedEventsSalesSchema = z.object({
  public: z.lazy(() => EventResultsEmbeddedEventsSalesPublicSchema)
});


export const EventResultsEmbeddedEventsDatesSchema = z.object({
  start: z.lazy(() => EventResultsEmbeddedEventsDatesStartSchema),
  timezone: z.string().required(),
  status: z.lazy(() => EventResultsEmbeddedEventsDatesStatusSchema)
});


export const EventResultsEmbeddedEventsClassificationsSchema = z.object({
  primary: z.boolean().required(),
  segment: z.lazy(() => EventResultsEmbeddedEventsClassificationsSegmentSchema),
  genre: z.lazy(() => EventResultsEmbeddedEventsClassificationsGenreSchema),
  subGenre: z.lazy(() => EventResultsEmbeddedEventsClassificationsSubGenreSchema)
});


export const EventResultsEmbeddedEventsPromoterSchema = z.object({
  id: z.number().required().max(682)
});


export const EventResultsEmbeddedEventsLinksSchema = z.object({
  self: z.lazy(() => EventResultsEmbeddedEventsLinksSelfSchema),
  attractions: z.lazy(() => EventResultsEmbeddedEventsLinksAttractionsSchema),
  venues: z.lazy(() => EventResultsEmbeddedEventsLinksVenuesSchema)
});


export const EventResultsEmbeddedEventsEmbeddedSchema = z.object({
  venues: z.lazy(() => EventResultsEmbeddedEventsEmbeddedVenuesSchema),
  attractions: z.lazy(() => EventResultsEmbeddedEventsEmbeddedAttractionsSchema)
});


export const EventResultsEmbeddedEventsSalesPublicSchema = z.object({
  startDateTime: z.date().required(),
  startTbd: z.boolean().required(),
  endDateTime: z.date().required()
});


export const EventResultsEmbeddedEventsDatesStartSchema = z.object({
  localDate: z.date().required(),
  dateTbd: z.boolean().required(),
  dateTba: z.boolean().required(),
  timeTba: z.boolean().required(),
  noSpecificTime: z.boolean().required()
});


export const EventResultsEmbeddedEventsDatesStatusSchema = z.object({
  code: z.string().required()
});


export const EventResultsEmbeddedEventsClassificationsSegmentSchema = z.object({
  id: z.string().required(),
  name: z.string().required()
});


export const EventResultsEmbeddedEventsClassificationsGenreSchema = z.object({
  id: z.string().required(),
  name: z.string().required()
});


export const EventResultsEmbeddedEventsClassificationsSubGenreSchema = z.object({
  id: z.string().required(),
  name: z.string().required()
});


export const EventResultsEmbeddedEventsLinksSelfSchema = z.object({
  href: z.string().required()
});


export const EventResultsEmbeddedEventsLinksAttractionsSchema = z.object({
  href: z.string().required()
});


export const EventResultsEmbeddedEventsLinksVenuesSchema = z.object({
  href: z.string().required()
});


export const EventResultsEmbeddedEventsEmbeddedVenuesSchema = z.object({
  name: z.string().required(),
  type: z.string().required(),
  id: z.string().required(),
  test: z.boolean().required(),
  locale: z.string().required(),
  postalCode: z.number().required().max(33178),
  timezone: z.string().required(),
  city: z.lazy(() => EventResultsEmbeddedEventsEmbeddedVenuesCitySchema),
  state: z.lazy(() => EventResultsEmbeddedEventsEmbeddedVenuesStateSchema),
  country: z.lazy(() => EventResultsEmbeddedEventsEmbeddedVenuesCountrySchema),
  address: z.lazy(() => EventResultsEmbeddedEventsEmbeddedVenuesAddressSchema),
  location: z.lazy(() => EventResultsEmbeddedEventsEmbeddedVenuesLocationSchema),
  markets: z.lazy(() => EventResultsEmbeddedEventsEmbeddedVenuesMarketsSchema),
  links: z.lazy(() => EventResultsEmbeddedEventsEmbeddedVenuesLinksSchema)
});


export const EventResultsEmbeddedEventsEmbeddedAttractionsSchema = z.object({
  name: z.string().required(),
  type: z.string().required(),
  id: z.string().required(),
  test: z.boolean().required(),
  locale: z.string().required(),
  images: z.lazy(() => EventResultsEmbeddedEventsEmbeddedAttractionsImagesSchema),
  classifications: z.lazy(() => EventResultsEmbeddedEventsEmbeddedAttractionsClassificationsSchema),
  links: z.lazy(() => EventResultsEmbeddedEventsEmbeddedAttractionsLinksSchema)
});


export const EventResultsEmbeddedEventsEmbeddedVenuesCitySchema = z.object({
  name: z.string().required()
});


export const EventResultsEmbeddedEventsEmbeddedVenuesStateSchema = z.object({
  name: z.string().required(),
  stateCode: z.string().required()
});


export const EventResultsEmbeddedEventsEmbeddedVenuesCountrySchema = z.object({
  name: z.string().required(),
  countryCode: z.string().required()
});


export const EventResultsEmbeddedEventsEmbeddedVenuesAddressSchema = z.object({
  line1: z.string().required()
});


export const EventResultsEmbeddedEventsEmbeddedVenuesLocationSchema = z.object({
  longitude: z.number().required().max(-80.33854298),
  latitude: z.number().required().max(25.81260379)
});


export const EventResultsEmbeddedEventsEmbeddedVenuesMarketsSchema = z.object({
  id: z.number().required().max(15)
});


export const EventResultsEmbeddedEventsEmbeddedVenuesLinksSchema = z.object({
  self: z.lazy(() => EventResultsEmbeddedEventsEmbeddedVenuesLinksSelfSchema)
});


export const EventResultsEmbeddedEventsEmbeddedVenuesLinksSelfSchema = z.object({
  href: z.string().required()
});


export const EventResultsEmbeddedEventsEmbeddedAttractionsImagesSchema = z.object({
  ratio: z.string().required(),
  url: z.string().required(),
  width: z.number().required().max(2048),
  height: z.number().required().max(1152),
  fallback: z.boolean().required()
});


export const EventResultsEmbeddedEventsEmbeddedAttractionsClassificationsSchema = z.object({
  primary: z.boolean().required(),
  segment: z.lazy(() => EventResultsEmbeddedEventsEmbeddedAttractionsClassificationsSegmentSchema),
  genre: z.lazy(() => EventResultsEmbeddedEventsEmbeddedAttractionsClassificationsGenreSchema),
  subGenre: z.lazy(() => EventResultsEmbeddedEventsEmbeddedAttractionsClassificationsSubGenreSchema)
});


export const EventResultsEmbeddedEventsEmbeddedAttractionsLinksSchema = z.object({
  self: z.lazy(() => EventResultsEmbeddedEventsEmbeddedAttractionsLinksSelfSchema)
});


export const EventResultsEmbeddedEventsEmbeddedAttractionsClassificationsSegmentSchema = z.object({
  id: z.string().required(),
  name: z.string().required()
});


export const EventResultsEmbeddedEventsEmbeddedAttractionsClassificationsGenreSchema = z.object({
  id: z.string().required(),
  name: z.string().required()
});


export const EventResultsEmbeddedEventsEmbeddedAttractionsClassificationsSubGenreSchema = z.object({
  id: z.string().required(),
  name: z.string().required()
});


export const EventResultsEmbeddedEventsEmbeddedAttractionsLinksSelfSchema = z.object({
  href: z.string().required()
});


"
`;

exports[`#zod can emit migration for eventResults json, w/ dense & trim fields 1`] = `
"import { z } from \\"zod\\";


export const EventResultsSchema = z.object({
  links: z.lazy(() => _inksSchema),
  embedded: z.lazy(() => _mbeddedSchema),
  page: z.lazy(() => PageSchema)
});

export const LinksSchema = z.object({
  self: z.lazy(() => SelfSchema)
});


export const EmbeddedSchema = z.object({
  venues: z.lazy(() => VenuesSchema),
  attractions: z.lazy(() => AttractionsSchema)
});


export const PageSchema = z.object({
  size: z.number().required().max(1),
  totalElements: z.number().required().max(87958),
  totalPages: z.number().required().max(87958),
  number: z.number().required()
});


export const SelfSchema = z.object({
  href: z.string().required()
});


export const NextSchema = z.object({
  href: z.string().required(),
  templated: z.boolean().required()
});


export const EventsSchema = z.object({
  name: z.string().required(),
  type: z.string().required(),
  id: z.string().required(),
  test: z.boolean().required(),
  url: z.string().required(),
  locale: z.string().required(),
  images: z.lazy(() => ImagesSchema),
  sales: z.lazy(() => SalesSchema),
  dates: z.lazy(() => DatesSchema),
  classifications: z.lazy(() => ClassificationsSchema),
  promoter: z.lazy(() => PromoterSchema),
  links: z.lazy(() => _inksSchema),
  embedded: z.lazy(() => _mbeddedSchema)
});


export const ImagesSchema = z.object({
  ratio: z.string().required(),
  url: z.string().required(),
  width: z.number().required().max(2048),
  height: z.number().required().max(1152),
  fallback: z.boolean().required()
});


export const SalesSchema = z.object({
  public: z.lazy(() => PublicSchema)
});


export const DatesSchema = z.object({
  start: z.lazy(() => StartSchema),
  timezone: z.string().required(),
  status: z.lazy(() => StatusSchema)
});


export const ClassificationsSchema = z.object({
  primary: z.boolean().required(),
  segment: z.lazy(() => IdNameSchema),
  genre: z.lazy(() => IdNameSchema),
  subGenre: z.lazy(() => IdNameSchema)
});


export const PromoterSchema = z.object({
  id: z.number().required().max(682)
});


export const PublicSchema = z.object({
  startDateTime: z.date().required(),
  startTbd: z.boolean().required(),
  endDateTime: z.date().required()
});


export const StartSchema = z.object({
  localDate: z.date().required(),
  dateTbd: z.boolean().required(),
  dateTba: z.boolean().required(),
  timeTba: z.boolean().required(),
  noSpecificTime: z.boolean().required()
});


export const StatusSchema = z.object({
  code: z.string().required()
});


export const AttractionsSchema = z.object({
  name: z.string().required(),
  type: z.string().required(),
  id: z.string().required(),
  test: z.boolean().required(),
  locale: z.string().required(),
  images: z.lazy(() => ImagesSchema),
  classifications: z.lazy(() => ClassificationsSchema),
  links: z.lazy(() => _inksSchema)
});


export const VenuesSchema = z.object({
  name: z.string().required(),
  type: z.string().required(),
  id: z.string().required(),
  test: z.boolean().required(),
  locale: z.string().required(),
  postalCode: z.number().required().max(33178),
  timezone: z.string().required(),
  city: z.lazy(() => CitySchema),
  state: z.lazy(() => StateSchema),
  country: z.lazy(() => CountrySchema),
  address: z.lazy(() => AddressSchema),
  location: z.lazy(() => LocationSchema),
  markets: z.lazy(() => MarketsSchema),
  links: z.lazy(() => _inksSchema)
});


export const CitySchema = z.object({
  name: z.string().required()
});


export const StateSchema = z.object({
  name: z.string().required(),
  stateCode: z.string().required()
});


export const CountrySchema = z.object({
  name: z.string().required(),
  countryCode: z.string().required()
});


export const AddressSchema = z.object({
  line1: z.string().required()
});


export const LocationSchema = z.object({
  longitude: z.number().required().max(-80.33854298),
  latitude: z.number().required().max(25.81260379)
});


export const MarketsSchema = z.object({
  id: z.number().required().max(15)
});


export const IdNameSchema = z.object({
  id: z.string().required(),
  name: z.string().required()
});


"
`;

exports[`#zod can emit migration for eventResults json, w/ dense fields 1`] = `
"import { z } from \\"zod\\";


export const EventResultsSchema = z.object({
  links: z.lazy(() => EventResultsLinksSchema),
  embedded: z.lazy(() => EventResultsEmbeddedSchema),
  page: z.lazy(() => EventResultsPageSchema)
});

export const EventResultsLinksSchema = z.object({
  self: z.lazy(() => HrefTemplatedSchema),
  next: z.lazy(() => HrefTemplatedSchema)
});


export const EventResultsEmbeddedSchema = z.object({
  events: z.lazy(() => EventResultsEmbeddedEventsSchema)
});


export const EventResultsPageSchema = z.object({
  size: z.number().required().max(1),
  totalElements: z.number().required().max(87958),
  totalPages: z.number().required().max(87958),
  number: z.number().required()
});


export const EventResultsEmbeddedEventsSchema = z.object({
  name: z.string().required(),
  type: z.string().required(),
  id: z.string().required(),
  test: z.boolean().required(),
  url: z.string().required(),
  locale: z.string().required(),
  images: z.lazy(() => ImagesSchema),
  sales: z.lazy(() => EventResultsEmbeddedEventsSalesSchema),
  dates: z.lazy(() => EventResultsEmbeddedEventsDatesSchema),
  classifications: z.lazy(() => ClassificationsSchema),
  promoter: z.lazy(() => EventResultsEmbeddedEventsPromoterSchema),
  links: z.lazy(() => EventResultsEmbeddedEventsLinksSchema),
  embedded: z.lazy(() => EventResultsEmbeddedEventsEmbeddedSchema)
});


export const EventResultsEmbeddedEventsSalesSchema = z.object({
  public: z.lazy(() => EventResultsEmbeddedEventsSalesPublicSchema)
});


export const EventResultsEmbeddedEventsDatesSchema = z.object({
  start: z.lazy(() => EventResultsEmbeddedEventsDatesStartSchema),
  timezone: z.string().required(),
  status: z.lazy(() => EventResultsEmbeddedEventsDatesStatusSchema)
});


export const EventResultsEmbeddedEventsPromoterSchema = z.object({
  id: z.number().required().max(682)
});


export const EventResultsEmbeddedEventsLinksSchema = z.object({
  self: z.lazy(() => HrefSchema),
  attractions: z.lazy(() => HrefSchema),
  venues: z.lazy(() => HrefSchema)
});


export const EventResultsEmbeddedEventsEmbeddedSchema = z.object({
  venues: z.lazy(() => EventResultsEmbeddedEventsEmbeddedVenuesSchema),
  attractions: z.lazy(() => EventResultsEmbeddedEventsEmbeddedAttractionsSchema)
});


export const EventResultsEmbeddedEventsSalesPublicSchema = z.object({
  startDateTime: z.date().required(),
  startTbd: z.boolean().required(),
  endDateTime: z.date().required()
});


export const EventResultsEmbeddedEventsDatesStartSchema = z.object({
  localDate: z.date().required(),
  dateTbd: z.boolean().required(),
  dateTba: z.boolean().required(),
  timeTba: z.boolean().required(),
  noSpecificTime: z.boolean().required()
});


export const EventResultsEmbeddedEventsDatesStatusSchema = z.object({
  code: z.string().required()
});


export const EventResultsEmbeddedEventsEmbeddedVenuesSchema = z.object({
  name: z.string().required(),
  type: z.string().required(),
  id: z.string().required(),
  test: z.boolean().required(),
  locale: z.string().required(),
  postalCode: z.number().required().max(33178),
  timezone: z.string().required(),
  city: z.lazy(() => EventResultsEmbeddedEventsEmbeddedVenuesCitySchema),
  state: z.lazy(() => EventResultsEmbeddedEventsEmbeddedVenuesStateSchema),
  country: z.lazy(() => EventResultsEmbeddedEventsEmbeddedVenuesCountrySchema),
  address: z.lazy(() => EventResultsEmbeddedEventsEmbeddedVenuesAddressSchema),
  location: z.lazy(() => EventResultsEmbeddedEventsEmbeddedVenuesLocationSchema),
  markets: z.lazy(() => EventResultsEmbeddedEventsEmbeddedVenuesMarketsSchema),
  links: z.lazy(() => _inksSchema)
});


export const EventResultsEmbeddedEventsEmbeddedAttractionsSchema = z.object({
  name: z.string().required(),
  type: z.string().required(),
  id: z.string().required(),
  test: z.boolean().required(),
  locale: z.string().required(),
  images: z.lazy(() => ImagesSchema),
  classifications: z.lazy(() => ClassificationsSchema),
  links: z.lazy(() => _inksSchema)
});


export const EventResultsEmbeddedEventsEmbeddedVenuesCitySchema = z.object({
  name: z.string().required()
});


export const EventResultsEmbeddedEventsEmbeddedVenuesStateSchema = z.object({
  name: z.string().required(),
  stateCode: z.string().required()
});


export const EventResultsEmbeddedEventsEmbeddedVenuesCountrySchema = z.object({
  name: z.string().required(),
  countryCode: z.string().required()
});


export const EventResultsEmbeddedEventsEmbeddedVenuesAddressSchema = z.object({
  line1: z.string().required()
});


export const EventResultsEmbeddedEventsEmbeddedVenuesLocationSchema = z.object({
  longitude: z.number().required().max(-80.33854298),
  latitude: z.number().required().max(25.81260379)
});


export const EventResultsEmbeddedEventsEmbeddedVenuesMarketsSchema = z.object({
  id: z.number().required().max(15)
});


export const HrefTemplatedSchema = z.object({
  href: z.string().required(),
  templated: z.boolean().required()
});


export const ImagesSchema = z.object({
  ratio: z.string().required(),
  url: z.string().required(),
  width: z.number().required().max(2048),
  height: z.number().required().max(1152),
  fallback: z.boolean().required()
});


export const ClassificationsSchema = z.object({
  primary: z.boolean().required(),
  segment: z.lazy(() => IdNameSchema),
  genre: z.lazy(() => IdNameSchema),
  subGenre: z.lazy(() => IdNameSchema)
});


export const IdNameSchema = z.object({
  id: z.string().required(),
  name: z.string().required()
});


export const HrefSchema = z.object({
  href: z.string().required()
});


export const LinksSchema = z.object({
  self: z.lazy(() => HrefSchema)
});


"
`;

exports[`#zod can emit migration for pokemon json 1`] = `
"import { z } from \\"zod\\";


export const PokemonSchema = z.object({
  abilities: z.lazy(() => PokemonAbilitiesSchema),
  baseExperience: z.number().required().max(62),
  forms: z.lazy(() => PokemonFormsSchema),
  gameIndices: z.lazy(() => PokemonGameIndicesSchema),
  height: z.number().required().max(6),
  heldItems: z.array().required(),
  id: z.number().required().max(4),
  isDefault: z.boolean().required(),
  locationAreaEncounters: z.string().required(),
  moves: z.lazy(() => PokemonMovesSchema),
  name: z.string().required(),
  order: z.number().required().max(5),
  species: z.lazy(() => PokemonSpeciesSchema),
  sprites: z.lazy(() => PokemonSpritesSchema),
  stats: z.lazy(() => PokemonStatsSchema),
  types: z.lazy(() => PokemonTypesSchema),
  weight: z.number().required().max(85)
});

export const PokemonAbilitiesSchema = z.object({
  ability: z.lazy(() => PokemonAbilitiesAbilitySchema),
  isHidden: z.boolean().required(),
  slot: z.number().required().max(3)
});


export const PokemonFormsSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const PokemonGameIndicesSchema = z.object({
  gameIndex: z.number().required().max(176),
  version: z.lazy(() => PokemonGameIndicesVersionSchema)
});


export const PokemonMovesSchema = z.object({
  move: z.lazy(() => PokemonMovesMoveSchema),
  versionGroupDetails: z.lazy(() => PokemonMovesVersionGroupDetailsSchema)
});


export const PokemonSpeciesSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const PokemonSpritesSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required(),
  other: z.lazy(() => PokemonSpritesOtherSchema),
  versions: z.lazy(() => PokemonSpritesVersionsSchema)
});


export const PokemonStatsSchema = z.object({
  baseStat: z.number().required().max(65),
  effort: z.number().required().max(1),
  stat: z.lazy(() => PokemonStatsStatSchema)
});


export const PokemonTypesSchema = z.object({
  slot: z.number().required().max(1),
  type: z.lazy(() => PokemonTypesTypeSchema)
});


export const PokemonAbilitiesAbilitySchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const PokemonGameIndicesVersionSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const PokemonMovesMoveSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const PokemonMovesVersionGroupDetailsSchema = z.object({
  levelLearnedAt: z.number().required().max(49),
  moveLearnMethod: z.lazy(() => PokemonMovesVersionGroupDetailsMoveLearnMethodSchema),
  versionGroup: z.lazy(() => PokemonMovesVersionGroupDetailsVersionGroupSchema)
});


export const PokemonMovesVersionGroupDetailsMoveLearnMethodSchema = z.object({
  name: z.string().required().enum([\\"machine\\", \\"tutor\\", \\"level-up\\", \\"egg\\"]),
  url: z.string().required().enum([\\"https://pokeapi.co/api/v2/move-learn-method/4/\\", \\"https://pokeapi.co/api/v2/move-learn-method/3/\\", \\"https://pokeapi.co/api/v2/move-learn-method/1/\\", \\"https://pokeapi.co/api/v2/move-learn-method/2/\\"])
});


export const PokemonMovesVersionGroupDetailsVersionGroupSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const PokemonSpritesOtherSchema = z.object({
  dreamWorld: z.lazy(() => PokemonSpritesOtherDreamWorldSchema),
  officialArtwork: z.lazy(() => PokemonSpritesOtherOfficialArtworkSchema)
});


export const PokemonSpritesVersionsSchema = z.object({
  generationI: z.lazy(() => PokemonSpritesVersionsGenerationISchema),
  generationIi: z.lazy(() => PokemonSpritesVersionsGenerationIiSchema),
  generationIii: z.lazy(() => PokemonSpritesVersionsGenerationIiiSchema),
  generationIv: z.lazy(() => PokemonSpritesVersionsGenerationIvSchema),
  generationV: z.lazy(() => PokemonSpritesVersionsGenerationVSchema),
  generationVi: z.lazy(() => PokemonSpritesVersionsGenerationViSchema),
  generationVii: z.lazy(() => PokemonSpritesVersionsGenerationViiSchema),
  generationViii: z.lazy(() => PokemonSpritesVersionsGenerationViiiSchema)
});


export const PokemonSpritesOtherDreamWorldSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required()
});


export const PokemonSpritesOtherOfficialArtworkSchema = z.object({
  frontDefault: z.string().required()
});


export const PokemonSpritesVersionsGenerationISchema = z.object({
  redBlue: z.lazy(() => PokemonSpritesVersionsGenerationIRedBlueSchema),
  yellow: z.lazy(() => PokemonSpritesVersionsGenerationIYellowSchema)
});


export const PokemonSpritesVersionsGenerationIiSchema = z.object({
  crystal: z.lazy(() => PokemonSpritesVersionsGenerationIiCrystalSchema),
  gold: z.lazy(() => PokemonSpritesVersionsGenerationIiGoldSchema),
  silver: z.lazy(() => PokemonSpritesVersionsGenerationIiSilverSchema)
});


export const PokemonSpritesVersionsGenerationIiiSchema = z.object({
  emerald: z.lazy(() => PokemonSpritesVersionsGenerationIiiEmeraldSchema),
  fireredLeafgreen: z.lazy(() => PokemonSpritesVersionsGenerationIiiFireredLeafgreenSchema),
  rubySapphire: z.lazy(() => PokemonSpritesVersionsGenerationIiiRubySapphireSchema)
});


export const PokemonSpritesVersionsGenerationIvSchema = z.object({
  diamondPearl: z.lazy(() => PokemonSpritesVersionsGenerationIvDiamondPearlSchema),
  heartgoldSoulsilver: z.lazy(() => PokemonSpritesVersionsGenerationIvHeartgoldSoulsilverSchema),
  platinum: z.lazy(() => PokemonSpritesVersionsGenerationIvPlatinumSchema)
});


export const PokemonSpritesVersionsGenerationVSchema = z.object({
  blackWhite: z.lazy(() => PokemonSpritesVersionsGenerationVBlackWhiteSchema)
});


export const PokemonSpritesVersionsGenerationViSchema = z.object({
  omegarubyAlphasapphire: z.lazy(() => PokemonSpritesVersionsGenerationViOmegarubyAlphasapphireSchema),
  xY: z.lazy(() => PokemonSpritesVersionsGenerationViXYSchema)
});


export const PokemonSpritesVersionsGenerationViiSchema = z.object({
  icons: z.lazy(() => PokemonSpritesVersionsGenerationViiIconsSchema),
  ultraSunUltraMoon: z.lazy(() => PokemonSpritesVersionsGenerationViiUltraSunUltraMoonSchema)
});


export const PokemonSpritesVersionsGenerationViiiSchema = z.object({
  icons: z.lazy(() => PokemonSpritesVersionsGenerationViiiIconsSchema)
});


export const PokemonSpritesVersionsGenerationIRedBlueSchema = z.object({
  backDefault: z.string().required(),
  backGray: z.string().required(),
  frontDefault: z.string().required(),
  frontGray: z.string().required()
});


export const PokemonSpritesVersionsGenerationIYellowSchema = z.object({
  backDefault: z.string().required(),
  backGray: z.string().required(),
  frontDefault: z.string().required(),
  frontGray: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiCrystalSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiGoldSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiSilverSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiiEmeraldSchema = z.object({
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiiFireredLeafgreenSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiiRubySapphireSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIvDiamondPearlSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationIvHeartgoldSoulsilverSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationIvPlatinumSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationVBlackWhiteSchema = z.object({
  animated: z.lazy(() => PokemonSpritesVersionsGenerationVBlackWhiteAnimatedSchema),
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationVBlackWhiteAnimatedSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationViOmegarubyAlphasapphireSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationViXYSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationViiIconsSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationViiUltraSunUltraMoonSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationViiiIconsSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required()
});


export const PokemonStatsStatSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const PokemonTypesTypeSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


"
`;

exports[`#zod can emit migration for pokemon json, w/ dense & trim fields 1`] = `
"import { z } from \\"zod\\";


export const PokemonSchema = z.object({
  abilities: z.lazy(() => AbilitiesSchema),
  baseExperience: z.number().required().max(62),
  forms: z.lazy(() => FormsSchema),
  gameIndices: z.lazy(() => GameIndicesSchema),
  height: z.number().required().max(6),
  heldItems: z.array().required(),
  id: z.number().required().max(4),
  isDefault: z.boolean().required(),
  locationAreaEncounters: z.string().required(),
  moves: z.lazy(() => MovesSchema),
  name: z.string().required(),
  order: z.number().required().max(5),
  species: z.lazy(() => SpeciesSchema),
  sprites: z.lazy(() => SpritesSchema),
  stats: z.lazy(() => StatsSchema),
  types: z.lazy(() => TypesSchema),
  weight: z.number().required().max(85)
});

export const AbilitiesSchema = z.object({
  ability: z.lazy(() => NameUrlSchema),
  isHidden: z.boolean().required(),
  slot: z.number().required().max(3)
});


export const GameIndicesSchema = z.object({
  gameIndex: z.number().required().max(176),
  version: z.lazy(() => NameUrlSchema)
});


export const MovesSchema = z.object({
  move: z.lazy(() => NameUrlSchema),
  versionGroupDetails: z.lazy(() => VersionGroupDetailsSchema)
});


export const SpritesSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required(),
  other: z.lazy(() => OtherSchema),
  versions: z.lazy(() => VersionsSchema)
});


export const StatsSchema = z.object({
  baseStat: z.number().required().max(65),
  effort: z.number().required().max(1),
  stat: z.lazy(() => NameUrlSchema)
});


export const TypesSchema = z.object({
  slot: z.number().required().max(1),
  type: z.lazy(() => NameUrlSchema)
});


export const VersionGroupDetailsSchema = z.object({
  levelLearnedAt: z.number().required().max(49),
  moveLearnMethod: z.lazy(() => NameUrlSchema),
  versionGroup: z.lazy(() => NameUrlSchema)
});


export const OtherSchema = z.object({
  dreamWorld: z.lazy(() => FrontDefaultFrontFemaleSchema),
  officialArtwork: z.lazy(() => OfficialArtworkSchema)
});


export const VersionsSchema = z.object({
  generationI: z.lazy(() => GenerationISchema),
  generationIi: z.lazy(() => GenerationIiSchema),
  generationIii: z.lazy(() => GenerationIiiSchema),
  generationIv: z.lazy(() => GenerationIvSchema),
  generationV: z.lazy(() => GenerationVSchema),
  generationVi: z.lazy(() => GenerationViSchema),
  generationVii: z.lazy(() => GenerationViiSchema),
  generationViii: z.lazy(() => GenerationViiiSchema)
});


export const OfficialArtworkSchema = z.object({
  frontDefault: z.string().required()
});


export const GenerationISchema = z.object({
  redBlue: z.lazy(() => RedBlueYellowSchema),
  yellow: z.lazy(() => RedBlueYellowSchema)
});


export const GenerationIiSchema = z.object({
  crystal: z.lazy(() => CrystalSchema),
  gold: z.lazy(() => GoldSchema),
  silver: z.lazy(() => SilverSchema)
});


export const GenerationIiiSchema = z.object({
  emerald: z.lazy(() => EmeraldSchema),
  fireredLeafgreen: z.lazy(() => FireredLeafgreenSchema),
  rubySapphire: z.lazy(() => RubySapphireSchema)
});


export const GenerationIvSchema = z.object({
  diamondPearl: z.lazy(() => AnimatedDiamondPearlHeartgoldSoulsilverPlatinumSchema),
  heartgoldSoulsilver: z.lazy(() => AnimatedDiamondPearlHeartgoldSoulsilverPlatinumSchema),
  platinum: z.lazy(() => AnimatedDiamondPearlHeartgoldSoulsilverPlatinumSchema)
});


export const GenerationVSchema = z.object({
  blackWhite: z.lazy(() => BlackWhiteSchema)
});


export const GenerationViSchema = z.object({
  omegarubyAlphasapphire: z.lazy(() => OmegarubyAlphasapphireUltraSunUltraMoonXYSchema),
  xY: z.lazy(() => OmegarubyAlphasapphireUltraSunUltraMoonXYSchema)
});


export const GenerationViiSchema = z.object({
  icons: z.lazy(() => FrontDefaultFrontFemaleSchema),
  ultraSunUltraMoon: z.lazy(() => OmegarubyAlphasapphireUltraSunUltraMoonXYSchema)
});


export const GenerationViiiSchema = z.object({
  icons: z.lazy(() => FrontDefaultFrontFemaleSchema)
});


export const CrystalSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const GoldSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const SilverSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const EmeraldSchema = z.object({
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const FireredLeafgreenSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const RubySapphireSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const BlackWhiteSchema = z.object({
  animated: z.lazy(() => AnimatedDiamondPearlHeartgoldSoulsilverPlatinumSchema),
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const NameUrlSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const FrontDefaultFrontFemaleSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required()
});


export const RedBlueYellowSchema = z.object({
  backDefault: z.string().required(),
  backGray: z.string().required(),
  frontDefault: z.string().required(),
  frontGray: z.string().required()
});


export const AnimatedDiamondPearlHeartgoldSoulsilverPlatinumSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const OmegarubyAlphasapphireUltraSunUltraMoonXYSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


"
`;

exports[`#zod can emit migration for pokemon json, w/ dense fields 1`] = `
"import { z } from \\"zod\\";


export const PokemonSchema = z.object({
  abilities: z.lazy(() => PokemonAbilitiesSchema),
  baseExperience: z.number().required().max(62),
  forms: z.lazy(() => PokemonFormsSchema),
  gameIndices: z.lazy(() => PokemonGameIndicesSchema),
  height: z.number().required().max(6),
  heldItems: z.array().required(),
  id: z.number().required().max(4),
  isDefault: z.boolean().required(),
  locationAreaEncounters: z.string().required(),
  moves: z.lazy(() => PokemonMovesSchema),
  name: z.string().required(),
  order: z.number().required().max(5),
  species: z.lazy(() => PokemonSpeciesSchema),
  sprites: z.lazy(() => PokemonSpritesSchema),
  stats: z.lazy(() => PokemonStatsSchema),
  types: z.lazy(() => PokemonTypesSchema),
  weight: z.number().required().max(85)
});

export const PokemonAbilitiesSchema = z.object({
  ability: z.lazy(() => NameUrlSchema),
  isHidden: z.boolean().required(),
  slot: z.number().required().max(3)
});


export const PokemonGameIndicesSchema = z.object({
  gameIndex: z.number().required().max(176),
  version: z.lazy(() => NameUrlSchema)
});


export const PokemonMovesSchema = z.object({
  move: z.lazy(() => NameUrlSchema),
  versionGroupDetails: z.lazy(() => PokemonMovesVersionGroupDetailsSchema)
});


export const PokemonSpritesSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required(),
  other: z.lazy(() => PokemonSpritesOtherSchema),
  versions: z.lazy(() => PokemonSpritesVersionsSchema)
});


export const PokemonStatsSchema = z.object({
  baseStat: z.number().required().max(65),
  effort: z.number().required().max(1),
  stat: z.lazy(() => NameUrlSchema)
});


export const PokemonTypesSchema = z.object({
  slot: z.number().required().max(1),
  type: z.lazy(() => NameUrlSchema)
});


export const PokemonMovesVersionGroupDetailsSchema = z.object({
  levelLearnedAt: z.number().required().max(49),
  moveLearnMethod: z.lazy(() => NameUrlSchema),
  versionGroup: z.lazy(() => NameUrlSchema)
});


export const PokemonSpritesOtherSchema = z.object({
  dreamWorld: z.lazy(() => FrontDefaultFrontFemaleSchema),
  officialArtwork: z.lazy(() => PokemonSpritesOtherOfficialArtworkSchema)
});


export const PokemonSpritesVersionsSchema = z.object({
  generationI: z.lazy(() => PokemonSpritesVersionsGenerationISchema),
  generationIi: z.lazy(() => PokemonSpritesVersionsGenerationIiSchema),
  generationIii: z.lazy(() => PokemonSpritesVersionsGenerationIiiSchema),
  generationIv: z.lazy(() => PokemonSpritesVersionsGenerationIvSchema),
  generationV: z.lazy(() => PokemonSpritesVersionsGenerationVSchema),
  generationVi: z.lazy(() => PokemonSpritesVersionsGenerationViSchema),
  generationVii: z.lazy(() => PokemonSpritesVersionsGenerationViiSchema),
  generationViii: z.lazy(() => PokemonSpritesVersionsGenerationViiiSchema)
});


export const PokemonSpritesOtherOfficialArtworkSchema = z.object({
  frontDefault: z.string().required()
});


export const PokemonSpritesVersionsGenerationISchema = z.object({
  redBlue: z.lazy(() => RedBlueYellowSchema),
  yellow: z.lazy(() => RedBlueYellowSchema)
});


export const PokemonSpritesVersionsGenerationIiSchema = z.object({
  crystal: z.lazy(() => PokemonSpritesVersionsGenerationIiCrystalSchema),
  gold: z.lazy(() => PokemonSpritesVersionsGenerationIiGoldSchema),
  silver: z.lazy(() => PokemonSpritesVersionsGenerationIiSilverSchema)
});


export const PokemonSpritesVersionsGenerationIiiSchema = z.object({
  emerald: z.lazy(() => PokemonSpritesVersionsGenerationIiiEmeraldSchema),
  fireredLeafgreen: z.lazy(() => PokemonSpritesVersionsGenerationIiiFireredLeafgreenSchema),
  rubySapphire: z.lazy(() => PokemonSpritesVersionsGenerationIiiRubySapphireSchema)
});


export const PokemonSpritesVersionsGenerationIvSchema = z.object({
  diamondPearl: z.lazy(() => PokemonSpritesVersionsGenerationIvDiamondPearlSchema),
  heartgoldSoulsilver: z.lazy(() => PokemonSpritesVersionsGenerationIvHeartgoldSoulsilverSchema),
  platinum: z.lazy(() => PokemonSpritesVersionsGenerationIvPlatinumSchema)
});


export const PokemonSpritesVersionsGenerationVSchema = z.object({
  blackWhite: z.lazy(() => PokemonSpritesVersionsGenerationVBlackWhiteSchema)
});


export const PokemonSpritesVersionsGenerationViSchema = z.object({
  omegarubyAlphasapphire: z.lazy(() => GenerationViiOmegarubyAlphasapphireUltraSunUltraMoonXYSchema),
  xY: z.lazy(() => GenerationViiOmegarubyAlphasapphireUltraSunUltraMoonXYSchema)
});


export const PokemonSpritesVersionsGenerationViiSchema = z.object({
  icons: z.lazy(() => FrontDefaultFrontFemaleSchema),
  ultraSunUltraMoon: z.lazy(() => GenerationViiOmegarubyAlphasapphireUltraSunUltraMoonXYSchema)
});


export const PokemonSpritesVersionsGenerationViiiSchema = z.object({
  icons: z.lazy(() => FrontDefaultFrontFemaleSchema)
});


export const PokemonSpritesVersionsGenerationIiCrystalSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiGoldSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiSilverSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiiEmeraldSchema = z.object({
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiiFireredLeafgreenSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiiRubySapphireSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIvDiamondPearlSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationIvHeartgoldSoulsilverSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationIvPlatinumSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationVBlackWhiteSchema = z.object({
  animated: z.lazy(() => PokemonSpritesVersionsGenerationVBlackWhiteAnimatedSchema),
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationVBlackWhiteAnimatedSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const NameUrlSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const FrontDefaultFrontFemaleSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required()
});


export const RedBlueYellowSchema = z.object({
  backDefault: z.string().required(),
  backGray: z.string().required(),
  frontDefault: z.string().required(),
  frontGray: z.string().required()
});


export const GenerationViiOmegarubyAlphasapphireUltraSunUltraMoonXYSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


"
`;

exports[`#zod can emit module exports correctly 1`] = `
"import { z } from \\"zod\\";


export const PokemonSchema = z.object({
  abilities: z.lazy(() => PokemonAbilitiesSchema),
  baseExperience: z.number().required().max(62),
  forms: z.lazy(() => PokemonFormsSchema),
  gameIndices: z.lazy(() => PokemonGameIndicesSchema),
  height: z.number().required().max(6),
  heldItems: z.array().required(),
  id: z.number().required().max(4),
  isDefault: z.boolean().required(),
  locationAreaEncounters: z.string().required(),
  moves: z.lazy(() => PokemonMovesSchema),
  name: z.string().required(),
  order: z.number().required().max(5),
  species: z.lazy(() => PokemonSpeciesSchema),
  sprites: z.lazy(() => PokemonSpritesSchema),
  stats: z.lazy(() => PokemonStatsSchema),
  types: z.lazy(() => PokemonTypesSchema),
  weight: z.number().required().max(85)
});

export const PokemonAbilitiesSchema = z.object({
  ability: z.lazy(() => PokemonAbilitiesAbilitySchema),
  isHidden: z.boolean().required(),
  slot: z.number().required().max(3)
});


export const PokemonFormsSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const PokemonGameIndicesSchema = z.object({
  gameIndex: z.number().required().max(176),
  version: z.lazy(() => PokemonGameIndicesVersionSchema)
});


export const PokemonMovesSchema = z.object({
  move: z.lazy(() => PokemonMovesMoveSchema),
  versionGroupDetails: z.lazy(() => PokemonMovesVersionGroupDetailsSchema)
});


export const PokemonSpeciesSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const PokemonSpritesSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required(),
  other: z.lazy(() => PokemonSpritesOtherSchema),
  versions: z.lazy(() => PokemonSpritesVersionsSchema)
});


export const PokemonStatsSchema = z.object({
  baseStat: z.number().required().max(65),
  effort: z.number().required().max(1),
  stat: z.lazy(() => PokemonStatsStatSchema)
});


export const PokemonTypesSchema = z.object({
  slot: z.number().required().max(1),
  type: z.lazy(() => PokemonTypesTypeSchema)
});


export const PokemonAbilitiesAbilitySchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const PokemonGameIndicesVersionSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const PokemonMovesMoveSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const PokemonMovesVersionGroupDetailsSchema = z.object({
  levelLearnedAt: z.number().required().max(49),
  moveLearnMethod: z.lazy(() => PokemonMovesVersionGroupDetailsMoveLearnMethodSchema),
  versionGroup: z.lazy(() => PokemonMovesVersionGroupDetailsVersionGroupSchema)
});


export const PokemonMovesVersionGroupDetailsMoveLearnMethodSchema = z.object({
  name: z.string().required().enum([\\"machine\\", \\"tutor\\", \\"level-up\\", \\"egg\\"]),
  url: z.string().required().enum([\\"https://pokeapi.co/api/v2/move-learn-method/4/\\", \\"https://pokeapi.co/api/v2/move-learn-method/3/\\", \\"https://pokeapi.co/api/v2/move-learn-method/1/\\", \\"https://pokeapi.co/api/v2/move-learn-method/2/\\"])
});


export const PokemonMovesVersionGroupDetailsVersionGroupSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const PokemonSpritesOtherSchema = z.object({
  dreamWorld: z.lazy(() => PokemonSpritesOtherDreamWorldSchema),
  officialArtwork: z.lazy(() => PokemonSpritesOtherOfficialArtworkSchema)
});


export const PokemonSpritesVersionsSchema = z.object({
  generationI: z.lazy(() => PokemonSpritesVersionsGenerationISchema),
  generationIi: z.lazy(() => PokemonSpritesVersionsGenerationIiSchema),
  generationIii: z.lazy(() => PokemonSpritesVersionsGenerationIiiSchema),
  generationIv: z.lazy(() => PokemonSpritesVersionsGenerationIvSchema),
  generationV: z.lazy(() => PokemonSpritesVersionsGenerationVSchema),
  generationVi: z.lazy(() => PokemonSpritesVersionsGenerationViSchema),
  generationVii: z.lazy(() => PokemonSpritesVersionsGenerationViiSchema),
  generationViii: z.lazy(() => PokemonSpritesVersionsGenerationViiiSchema)
});


export const PokemonSpritesOtherDreamWorldSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required()
});


export const PokemonSpritesOtherOfficialArtworkSchema = z.object({
  frontDefault: z.string().required()
});


export const PokemonSpritesVersionsGenerationISchema = z.object({
  redBlue: z.lazy(() => PokemonSpritesVersionsGenerationIRedBlueSchema),
  yellow: z.lazy(() => PokemonSpritesVersionsGenerationIYellowSchema)
});


export const PokemonSpritesVersionsGenerationIiSchema = z.object({
  crystal: z.lazy(() => PokemonSpritesVersionsGenerationIiCrystalSchema),
  gold: z.lazy(() => PokemonSpritesVersionsGenerationIiGoldSchema),
  silver: z.lazy(() => PokemonSpritesVersionsGenerationIiSilverSchema)
});


export const PokemonSpritesVersionsGenerationIiiSchema = z.object({
  emerald: z.lazy(() => PokemonSpritesVersionsGenerationIiiEmeraldSchema),
  fireredLeafgreen: z.lazy(() => PokemonSpritesVersionsGenerationIiiFireredLeafgreenSchema),
  rubySapphire: z.lazy(() => PokemonSpritesVersionsGenerationIiiRubySapphireSchema)
});


export const PokemonSpritesVersionsGenerationIvSchema = z.object({
  diamondPearl: z.lazy(() => PokemonSpritesVersionsGenerationIvDiamondPearlSchema),
  heartgoldSoulsilver: z.lazy(() => PokemonSpritesVersionsGenerationIvHeartgoldSoulsilverSchema),
  platinum: z.lazy(() => PokemonSpritesVersionsGenerationIvPlatinumSchema)
});


export const PokemonSpritesVersionsGenerationVSchema = z.object({
  blackWhite: z.lazy(() => PokemonSpritesVersionsGenerationVBlackWhiteSchema)
});


export const PokemonSpritesVersionsGenerationViSchema = z.object({
  omegarubyAlphasapphire: z.lazy(() => PokemonSpritesVersionsGenerationViOmegarubyAlphasapphireSchema),
  xY: z.lazy(() => PokemonSpritesVersionsGenerationViXYSchema)
});


export const PokemonSpritesVersionsGenerationViiSchema = z.object({
  icons: z.lazy(() => PokemonSpritesVersionsGenerationViiIconsSchema),
  ultraSunUltraMoon: z.lazy(() => PokemonSpritesVersionsGenerationViiUltraSunUltraMoonSchema)
});


export const PokemonSpritesVersionsGenerationViiiSchema = z.object({
  icons: z.lazy(() => PokemonSpritesVersionsGenerationViiiIconsSchema)
});


export const PokemonSpritesVersionsGenerationIRedBlueSchema = z.object({
  backDefault: z.string().required(),
  backGray: z.string().required(),
  frontDefault: z.string().required(),
  frontGray: z.string().required()
});


export const PokemonSpritesVersionsGenerationIYellowSchema = z.object({
  backDefault: z.string().required(),
  backGray: z.string().required(),
  frontDefault: z.string().required(),
  frontGray: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiCrystalSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiGoldSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiSilverSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiiEmeraldSchema = z.object({
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiiFireredLeafgreenSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIiiRubySapphireSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const PokemonSpritesVersionsGenerationIvDiamondPearlSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationIvHeartgoldSoulsilverSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationIvPlatinumSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationVBlackWhiteSchema = z.object({
  animated: z.lazy(() => PokemonSpritesVersionsGenerationVBlackWhiteAnimatedSchema),
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationVBlackWhiteAnimatedSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationViOmegarubyAlphasapphireSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationViXYSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationViiIconsSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationViiUltraSunUltraMoonSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PokemonSpritesVersionsGenerationViiiIconsSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required()
});


export const PokemonStatsStatSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const PokemonTypesTypeSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


"
`;

exports[`#zod can emit schema 1`] = `
"import { z } from \\"zod\\";


export const UsersSchema = z.object({
  id: z.string().uuid()).required(),
  email: z.string().required(),
  firstName: z.string().required(),
  lastName: z.string().required(),
  isActive: z.boolean().required(),
  createdAt: z.date().required(),
  modifiedAt: z.date().required(),
  catchPhrase: z.string().required(),
  companyName: z.string().required(),
  credits: z.number().required().max(20).enum([\\"1\\", \\"15\\", \\"20\\", \\"10\\", \\"0\\", \\"11\\", \\"7\\", \\"9\\"]),
  salesScore: z.number().required().max(20.9877865),
  location: z.string().required().enum([\\"nyc\\", \\"remote\\", \\"denver\\"]),
  profile: z.string()
});


"
`;

exports[`#zod can emit schema for people json 1`] = `
"import { z } from \\"zod\\";


export const PeopleSchema = z.object({
  name: z.string().required(),
  height: z.number().max(228),
  mass: z.number().max(140),
  hairColor: z.string().required(),
  skinColor: z.string(),
  eyeColor: z.string().required().enum([\\"blue\\", \\"yellow\\", \\"red\\", \\"brown\\", \\"blue-gray\\", \\"black\\", \\"orange\\", \\"hazel\\"]),
  birthYear: z.string(),
  homeworld: z.string().required(),
  films: z.array().required(),
  species: z.array().required(),
  vehicles: z.array().required(),
  starships: z.array().required(),
  created: z.date().required(),
  edited: z.date().required(),
  url: z.string().required(),
  id: z.number().required().max(42)
});


"
`;

exports[`#zod can emit schema with better names 1`] = `
"import { z } from \\"zod\\";


export const PokemonSchema = z.object({
  abilities: z.lazy(() => AbilitiesSchema),
  baseExperience: z.number().required().max(62),
  forms: z.lazy(() => FormsSchema),
  gameIndices: z.lazy(() => GameIndicesSchema),
  height: z.number().required().max(6),
  heldItems: z.array().required(),
  id: z.number().required().max(4),
  isDefault: z.boolean().required(),
  locationAreaEncounters: z.string().required(),
  moves: z.lazy(() => MovesSchema),
  name: z.string().required(),
  order: z.number().required().max(5),
  species: z.lazy(() => SpeciesSchema),
  sprites: z.lazy(() => SpritesSchema),
  stats: z.lazy(() => StatsSchema),
  types: z.lazy(() => TypesSchema),
  weight: z.number().required().max(85)
});

export const AbilitiesSchema = z.object({
  ability: z.lazy(() => AbilitySchema),
  isHidden: z.boolean().required(),
  slot: z.number().required().max(3)
});


export const FormsSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const GameIndicesSchema = z.object({
  gameIndex: z.number().required().max(176),
  version: z.lazy(() => VersionSchema)
});


export const MovesSchema = z.object({
  move: z.lazy(() => MoveSchema),
  versionGroupDetails: z.lazy(() => VersionGroupDetailsSchema)
});


export const SpeciesSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const SpritesSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required(),
  other: z.lazy(() => OtherSchema),
  versions: z.lazy(() => VersionsSchema)
});


export const StatsSchema = z.object({
  baseStat: z.number().required().max(65),
  effort: z.number().required().max(1),
  stat: z.lazy(() => StatSchema)
});


export const TypesSchema = z.object({
  slot: z.number().required().max(1),
  type: z.lazy(() => TypeSchema)
});


export const AbilitySchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const VersionSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const MoveSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const VersionGroupDetailsSchema = z.object({
  levelLearnedAt: z.number().required().max(49),
  moveLearnMethod: z.lazy(() => MoveLearnMethodSchema),
  versionGroup: z.lazy(() => VersionGroupSchema)
});


export const MoveLearnMethodSchema = z.object({
  name: z.string().required().enum([\\"machine\\", \\"tutor\\", \\"level-up\\", \\"egg\\"]),
  url: z.string().required().enum([\\"https://pokeapi.co/api/v2/move-learn-method/4/\\", \\"https://pokeapi.co/api/v2/move-learn-method/3/\\", \\"https://pokeapi.co/api/v2/move-learn-method/1/\\", \\"https://pokeapi.co/api/v2/move-learn-method/2/\\"])
});


export const VersionGroupSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const OtherSchema = z.object({
  dreamWorld: z.lazy(() => DreamWorldSchema),
  officialArtwork: z.lazy(() => OfficialArtworkSchema)
});


export const VersionsSchema = z.object({
  generationI: z.lazy(() => GenerationISchema),
  generationIi: z.lazy(() => GenerationIiSchema),
  generationIii: z.lazy(() => GenerationIiiSchema),
  generationIv: z.lazy(() => GenerationIvSchema),
  generationV: z.lazy(() => GenerationVSchema),
  generationVi: z.lazy(() => GenerationViSchema),
  generationVii: z.lazy(() => GenerationViiSchema),
  generationViii: z.lazy(() => GenerationViiiSchema)
});


export const DreamWorldSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required()
});


export const OfficialArtworkSchema = z.object({
  frontDefault: z.string().required()
});


export const GenerationISchema = z.object({
  redBlue: z.lazy(() => RedBlueSchema),
  yellow: z.lazy(() => YellowSchema)
});


export const GenerationIiSchema = z.object({
  crystal: z.lazy(() => CrystalSchema),
  gold: z.lazy(() => GoldSchema),
  silver: z.lazy(() => SilverSchema)
});


export const GenerationIiiSchema = z.object({
  emerald: z.lazy(() => EmeraldSchema),
  fireredLeafgreen: z.lazy(() => FireredLeafgreenSchema),
  rubySapphire: z.lazy(() => RubySapphireSchema)
});


export const GenerationIvSchema = z.object({
  diamondPearl: z.lazy(() => DiamondPearlSchema),
  heartgoldSoulsilver: z.lazy(() => HeartgoldSoulsilverSchema),
  platinum: z.lazy(() => PlatinumSchema)
});


export const GenerationVSchema = z.object({
  blackWhite: z.lazy(() => BlackWhiteSchema)
});


export const GenerationViSchema = z.object({
  omegarubyAlphasapphire: z.lazy(() => OmegarubyAlphasapphireSchema),
  xY: z.lazy(() => XYSchema)
});


export const GenerationViiSchema = z.object({
  icons: z.lazy(() => IconsSchema),
  ultraSunUltraMoon: z.lazy(() => UltraSunUltraMoonSchema)
});


export const GenerationViiiSchema = z.object({
  icons: z.lazy(() => IconsSchema)
});


export const RedBlueSchema = z.object({
  backDefault: z.string().required(),
  backGray: z.string().required(),
  frontDefault: z.string().required(),
  frontGray: z.string().required()
});


export const YellowSchema = z.object({
  backDefault: z.string().required(),
  backGray: z.string().required(),
  frontDefault: z.string().required(),
  frontGray: z.string().required()
});


export const CrystalSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const GoldSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const SilverSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const EmeraldSchema = z.object({
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const FireredLeafgreenSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const RubySapphireSchema = z.object({
  backDefault: z.string().required(),
  backShiny: z.string().required(),
  frontDefault: z.string().required(),
  frontShiny: z.string().required()
});


export const DiamondPearlSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const HeartgoldSoulsilverSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const PlatinumSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const BlackWhiteSchema = z.object({
  animated: z.lazy(() => AnimatedSchema),
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const AnimatedSchema = z.object({
  backDefault: z.string().required(),
  backFemale: z.any().required(),
  backShiny: z.string().required(),
  backShinyFemale: z.any().required(),
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const OmegarubyAlphasapphireSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const XYSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const IconsSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required()
});


export const UltraSunUltraMoonSchema = z.object({
  frontDefault: z.string().required(),
  frontFemale: z.any().required(),
  frontShiny: z.string().required(),
  frontShinyFemale: z.any().required()
});


export const StatSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


export const TypeSchema = z.object({
  name: z.string().required(),
  url: z.string().required()
});


"
`;

exports[`#zod can emit schema with nested types 1`] = `
"import { z } from \\"zod\\";


export const UsersSchema = z.object({
  id: z.number().required().max(12),
  name: z.string().required(),
  notes: z.lazy(() => UsersNotesSchema)
});

export const UsersNotesSchema = z.object({
  id: z.number().required().max(2998),
  text: z.string().required()
});


"
`;
